// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using project.Data;

#nullable disable

namespace project.Migrations
{
    [DbContext(typeof(RecipesDbContext))]
    partial class RecipesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("project.Models.Category", b =>
                {
                    b.Property<int>("categoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("categoryID"));

                    b.Property<byte[]>("Photo")
                        .HasColumnType("longblob");

                    b.Property<string>("category_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("categoryID");

                    b.ToTable("category");
                });

            modelBuilder.Entity("project.Models.Comments", b =>
                {
                    b.Property<int>("rewiewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("rewiewID"));

                    b.Property<int?>("parentID")
                        .HasColumnType("int");

                    b.Property<int>("recipeID")
                        .HasColumnType("int");

                    b.Property<string>("text")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("userID")
                        .HasColumnType("int");

                    b.HasKey("rewiewID");

                    b.HasIndex("parentID");

                    b.HasIndex("recipeID");

                    b.HasIndex("userID");

                    b.ToTable("rewiews");
                });

            modelBuilder.Entity("project.Models.Recipe", b =>
                {
                    b.Property<int>("recipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("recipeID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("recipeID"));

                    b.Property<byte[]>("Photo")
                        .HasColumnType("longblob");

                    b.Property<int>("categoryID")
                        .HasColumnType("int");

                    b.Property<string>("ingredients")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("instruction")
                        .HasColumnType("longtext");

                    b.Property<string>("recipe_name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<TimeSpan?>("time_cooking")
                        .HasColumnType("time(6)");

                    b.HasKey("recipeID");

                    b.HasIndex("categoryID");

                    b.ToTable("Recipes");
                });

            modelBuilder.Entity("project.Models.SavedRecipe", b =>
                {
                    b.Property<int>("savedID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("savedID");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("savedID"));

                    b.Property<int>("recipeID")
                        .HasColumnType("int")
                        .HasColumnName("recipeID");

                    b.Property<int>("userID")
                        .HasColumnType("int")
                        .HasColumnName("userID");

                    b.HasKey("savedID");

                    b.HasIndex("recipeID");

                    b.HasIndex("userID", "recipeID")
                        .IsUnique();

                    b.ToTable("saved_recipes");
                });

            modelBuilder.Entity("project.Models.User", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("userID"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("userID");

                    b.ToTable("user");
                });

            modelBuilder.Entity("project.Models.Comments", b =>
                {
                    b.HasOne("project.Models.Comments", "Parent")
                        .WithMany("Replies")
                        .HasForeignKey("parentID");

                    b.HasOne("project.Models.Recipe", "Recipe")
                        .WithMany("Comments")
                        .HasForeignKey("recipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Parent");

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("project.Models.Recipe", b =>
                {
                    b.HasOne("project.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("categoryID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("project.Models.SavedRecipe", b =>
                {
                    b.HasOne("project.Models.Recipe", "Recipe")
                        .WithMany("SavedByUsers")
                        .HasForeignKey("recipeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("project.Models.User", "User")
                        .WithMany("SavedRecipes")
                        .HasForeignKey("userID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipe");

                    b.Navigation("User");
                });

            modelBuilder.Entity("project.Models.Comments", b =>
                {
                    b.Navigation("Replies");
                });

            modelBuilder.Entity("project.Models.Recipe", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("SavedByUsers");
                });

            modelBuilder.Entity("project.Models.User", b =>
                {
                    b.Navigation("SavedRecipes");
                });
#pragma warning restore 612, 618
        }
    }
}
